#include <cstring>
#include <map>

#include "libchess/Position.h"
#include "tune.h"

int PawnPSTMG[64] = {
	PawnPSTMG_A1,
	PawnPSTMG_B1,
	PawnPSTMG_C1,
	PawnPSTMG_D1,
	PawnPSTMG_E1,
	PawnPSTMG_F1,
	PawnPSTMG_G1,
	PawnPSTMG_H1,
	PawnPSTMG_A2,
	PawnPSTMG_B2,
	PawnPSTMG_C2,
	PawnPSTMG_D2,
	PawnPSTMG_E2,
	PawnPSTMG_F2,
	PawnPSTMG_G2,
	PawnPSTMG_H2,
	PawnPSTMG_A3,
	PawnPSTMG_B3,
	PawnPSTMG_C3,
	PawnPSTMG_D3,
	PawnPSTMG_E3,
	PawnPSTMG_F3,
	PawnPSTMG_G3,
	PawnPSTMG_H3,
	PawnPSTMG_A4,
	PawnPSTMG_B4,
	PawnPSTMG_C4,
	PawnPSTMG_D4,
	PawnPSTMG_E4,
	PawnPSTMG_F4,
	PawnPSTMG_G4,
	PawnPSTMG_H4,
	PawnPSTMG_A5,
	PawnPSTMG_B5,
	PawnPSTMG_C5,
	PawnPSTMG_D5,
	PawnPSTMG_E5,
	PawnPSTMG_F5,
	PawnPSTMG_G5,
	PawnPSTMG_H5,
	PawnPSTMG_A6,
	PawnPSTMG_B6,
	PawnPSTMG_C6,
	PawnPSTMG_D6,
	PawnPSTMG_E6,
	PawnPSTMG_F6,
	PawnPSTMG_G6,
	PawnPSTMG_H6,
	PawnPSTMG_A7,
	PawnPSTMG_B7,
	PawnPSTMG_C7,
	PawnPSTMG_D7,
	PawnPSTMG_E7,
	PawnPSTMG_F7,
	PawnPSTMG_G7,
	PawnPSTMG_H7,
	PawnPSTMG_A8,
	PawnPSTMG_B8,
	PawnPSTMG_C8,
	PawnPSTMG_D8,
	PawnPSTMG_E8,
	PawnPSTMG_F8,
	PawnPSTMG_G8,
	PawnPSTMG_H8,
};
int PawnPSTEG[64] = {
	PawnPSTEG_A1,
	PawnPSTEG_B1,
	PawnPSTEG_C1,
	PawnPSTEG_D1,
	PawnPSTEG_E1,
	PawnPSTEG_F1,
	PawnPSTEG_G1,
	PawnPSTEG_H1,
	PawnPSTEG_A2,
	PawnPSTEG_B2,
	PawnPSTEG_C2,
	PawnPSTEG_D2,
	PawnPSTEG_E2,
	PawnPSTEG_F2,
	PawnPSTEG_G2,
	PawnPSTEG_H2,
	PawnPSTEG_A3,
	PawnPSTEG_B3,
	PawnPSTEG_C3,
	PawnPSTEG_D3,
	PawnPSTEG_E3,
	PawnPSTEG_F3,
	PawnPSTEG_G3,
	PawnPSTEG_H3,
	PawnPSTEG_A4,
	PawnPSTEG_B4,
	PawnPSTEG_C4,
	PawnPSTEG_D4,
	PawnPSTEG_E4,
	PawnPSTEG_F4,
	PawnPSTEG_G4,
	PawnPSTEG_H4,
	PawnPSTEG_A5,
	PawnPSTEG_B5,
	PawnPSTEG_C5,
	PawnPSTEG_D5,
	PawnPSTEG_E5,
	PawnPSTEG_F5,
	PawnPSTEG_G5,
	PawnPSTEG_H5,
	PawnPSTEG_A6,
	PawnPSTEG_B6,
	PawnPSTEG_C6,
	PawnPSTEG_D6,
	PawnPSTEG_E6,
	PawnPSTEG_F6,
	PawnPSTEG_G6,
	PawnPSTEG_H6,
	PawnPSTEG_A7,
	PawnPSTEG_B7,
	PawnPSTEG_C7,
	PawnPSTEG_D7,
	PawnPSTEG_E7,
	PawnPSTEG_F7,
	PawnPSTEG_G7,
	PawnPSTEG_H7,
	PawnPSTEG_A8,
	PawnPSTEG_B8,
	PawnPSTEG_C8,
	PawnPSTEG_D8,
	PawnPSTEG_E8,
	PawnPSTEG_F8,
	PawnPSTEG_G8,
	PawnPSTEG_H8,
};
int KnightPSTMG[64] = {
	KnightPSTMG_A1,
	KnightPSTMG_B1,
	KnightPSTMG_C1,
	KnightPSTMG_D1,
	KnightPSTMG_E1,
	KnightPSTMG_F1,
	KnightPSTMG_G1,
	KnightPSTMG_H1,
	KnightPSTMG_A2,
	KnightPSTMG_B2,
	KnightPSTMG_C2,
	KnightPSTMG_D2,
	KnightPSTMG_E2,
	KnightPSTMG_F2,
	KnightPSTMG_G2,
	KnightPSTMG_H2,
	KnightPSTMG_A3,
	KnightPSTMG_B3,
	KnightPSTMG_C3,
	KnightPSTMG_D3,
	KnightPSTMG_E3,
	KnightPSTMG_F3,
	KnightPSTMG_G3,
	KnightPSTMG_H3,
	KnightPSTMG_A4,
	KnightPSTMG_B4,
	KnightPSTMG_C4,
	KnightPSTMG_D4,
	KnightPSTMG_E4,
	KnightPSTMG_F4,
	KnightPSTMG_G4,
	KnightPSTMG_H4,
	KnightPSTMG_A5,
	KnightPSTMG_B5,
	KnightPSTMG_C5,
	KnightPSTMG_D5,
	KnightPSTMG_E5,
	KnightPSTMG_F5,
	KnightPSTMG_G5,
	KnightPSTMG_H5,
	KnightPSTMG_A6,
	KnightPSTMG_B6,
	KnightPSTMG_C6,
	KnightPSTMG_D6,
	KnightPSTMG_E6,
	KnightPSTMG_F6,
	KnightPSTMG_G6,
	KnightPSTMG_H6,
	KnightPSTMG_A7,
	KnightPSTMG_B7,
	KnightPSTMG_C7,
	KnightPSTMG_D7,
	KnightPSTMG_E7,
	KnightPSTMG_F7,
	KnightPSTMG_G7,
	KnightPSTMG_H7,
	KnightPSTMG_A8,
	KnightPSTMG_B8,
	KnightPSTMG_C8,
	KnightPSTMG_D8,
	KnightPSTMG_E8,
	KnightPSTMG_F8,
	KnightPSTMG_G8,
	KnightPSTMG_H8,
};
int KnightPSTEG[64] = {
	KnightPSTEG_A1,
	KnightPSTEG_B1,
	KnightPSTEG_C1,
	KnightPSTEG_D1,
	KnightPSTEG_E1,
	KnightPSTEG_F1,
	KnightPSTEG_G1,
	KnightPSTEG_H1,
	KnightPSTEG_A2,
	KnightPSTEG_B2,
	KnightPSTEG_C2,
	KnightPSTEG_D2,
	KnightPSTEG_E2,
	KnightPSTEG_F2,
	KnightPSTEG_G2,
	KnightPSTEG_H2,
	KnightPSTEG_A3,
	KnightPSTEG_B3,
	KnightPSTEG_C3,
	KnightPSTEG_D3,
	KnightPSTEG_E3,
	KnightPSTEG_F3,
	KnightPSTEG_G3,
	KnightPSTEG_H3,
	KnightPSTEG_A4,
	KnightPSTEG_B4,
	KnightPSTEG_C4,
	KnightPSTEG_D4,
	KnightPSTEG_E4,
	KnightPSTEG_F4,
	KnightPSTEG_G4,
	KnightPSTEG_H4,
	KnightPSTEG_A5,
	KnightPSTEG_B5,
	KnightPSTEG_C5,
	KnightPSTEG_D5,
	KnightPSTEG_E5,
	KnightPSTEG_F5,
	KnightPSTEG_G5,
	KnightPSTEG_H5,
	KnightPSTEG_A6,
	KnightPSTEG_B6,
	KnightPSTEG_C6,
	KnightPSTEG_D6,
	KnightPSTEG_E6,
	KnightPSTEG_F6,
	KnightPSTEG_G6,
	KnightPSTEG_H6,
	KnightPSTEG_A7,
	KnightPSTEG_B7,
	KnightPSTEG_C7,
	KnightPSTEG_D7,
	KnightPSTEG_E7,
	KnightPSTEG_F7,
	KnightPSTEG_G7,
	KnightPSTEG_H7,
	KnightPSTEG_A8,
	KnightPSTEG_B8,
	KnightPSTEG_C8,
	KnightPSTEG_D8,
	KnightPSTEG_E8,
	KnightPSTEG_F8,
	KnightPSTEG_G8,
	KnightPSTEG_H8,
};
int BishopPSTMG[64] = {
	BishopPSTMG_A1,
	BishopPSTMG_B1,
	BishopPSTMG_C1,
	BishopPSTMG_D1,
	BishopPSTMG_E1,
	BishopPSTMG_F1,
	BishopPSTMG_G1,
	BishopPSTMG_H1,
	BishopPSTMG_A2,
	BishopPSTMG_B2,
	BishopPSTMG_C2,
	BishopPSTMG_D2,
	BishopPSTMG_E2,
	BishopPSTMG_F2,
	BishopPSTMG_G2,
	BishopPSTMG_H2,
	BishopPSTMG_A3,
	BishopPSTMG_B3,
	BishopPSTMG_C3,
	BishopPSTMG_D3,
	BishopPSTMG_E3,
	BishopPSTMG_F3,
	BishopPSTMG_G3,
	BishopPSTMG_H3,
	BishopPSTMG_A4,
	BishopPSTMG_B4,
	BishopPSTMG_C4,
	BishopPSTMG_D4,
	BishopPSTMG_E4,
	BishopPSTMG_F4,
	BishopPSTMG_G4,
	BishopPSTMG_H4,
	BishopPSTMG_A5,
	BishopPSTMG_B5,
	BishopPSTMG_C5,
	BishopPSTMG_D5,
	BishopPSTMG_E5,
	BishopPSTMG_F5,
	BishopPSTMG_G5,
	BishopPSTMG_H5,
	BishopPSTMG_A6,
	BishopPSTMG_B6,
	BishopPSTMG_C6,
	BishopPSTMG_D6,
	BishopPSTMG_E6,
	BishopPSTMG_F6,
	BishopPSTMG_G6,
	BishopPSTMG_H6,
	BishopPSTMG_A7,
	BishopPSTMG_B7,
	BishopPSTMG_C7,
	BishopPSTMG_D7,
	BishopPSTMG_E7,
	BishopPSTMG_F7,
	BishopPSTMG_G7,
	BishopPSTMG_H7,
	BishopPSTMG_A8,
	BishopPSTMG_B8,
	BishopPSTMG_C8,
	BishopPSTMG_D8,
	BishopPSTMG_E8,
	BishopPSTMG_F8,
	BishopPSTMG_G8,
	BishopPSTMG_H8,
};
int BishopPSTEG[64] = {
	BishopPSTEG_A1,
	BishopPSTEG_B1,
	BishopPSTEG_C1,
	BishopPSTEG_D1,
	BishopPSTEG_E1,
	BishopPSTEG_F1,
	BishopPSTEG_G1,
	BishopPSTEG_H1,
	BishopPSTEG_A2,
	BishopPSTEG_B2,
	BishopPSTEG_C2,
	BishopPSTEG_D2,
	BishopPSTEG_E2,
	BishopPSTEG_F2,
	BishopPSTEG_G2,
	BishopPSTEG_H2,
	BishopPSTEG_A3,
	BishopPSTEG_B3,
	BishopPSTEG_C3,
	BishopPSTEG_D3,
	BishopPSTEG_E3,
	BishopPSTEG_F3,
	BishopPSTEG_G3,
	BishopPSTEG_H3,
	BishopPSTEG_A4,
	BishopPSTEG_B4,
	BishopPSTEG_C4,
	BishopPSTEG_D4,
	BishopPSTEG_E4,
	BishopPSTEG_F4,
	BishopPSTEG_G4,
	BishopPSTEG_H4,
	BishopPSTEG_A5,
	BishopPSTEG_B5,
	BishopPSTEG_C5,
	BishopPSTEG_D5,
	BishopPSTEG_E5,
	BishopPSTEG_F5,
	BishopPSTEG_G5,
	BishopPSTEG_H5,
	BishopPSTEG_A6,
	BishopPSTEG_B6,
	BishopPSTEG_C6,
	BishopPSTEG_D6,
	BishopPSTEG_E6,
	BishopPSTEG_F6,
	BishopPSTEG_G6,
	BishopPSTEG_H6,
	BishopPSTEG_A7,
	BishopPSTEG_B7,
	BishopPSTEG_C7,
	BishopPSTEG_D7,
	BishopPSTEG_E7,
	BishopPSTEG_F7,
	BishopPSTEG_G7,
	BishopPSTEG_H7,
	BishopPSTEG_A8,
	BishopPSTEG_B8,
	BishopPSTEG_C8,
	BishopPSTEG_D8,
	BishopPSTEG_E8,
	BishopPSTEG_F8,
	BishopPSTEG_G8,
	BishopPSTEG_H8,
};
int RookPSTMG[64] = {
	RookPSTMG_A1,
	RookPSTMG_B1,
	RookPSTMG_C1,
	RookPSTMG_D1,
	RookPSTMG_E1,
	RookPSTMG_F1,
	RookPSTMG_G1,
	RookPSTMG_H1,
	RookPSTMG_A2,
	RookPSTMG_B2,
	RookPSTMG_C2,
	RookPSTMG_D2,
	RookPSTMG_E2,
	RookPSTMG_F2,
	RookPSTMG_G2,
	RookPSTMG_H2,
	RookPSTMG_A3,
	RookPSTMG_B3,
	RookPSTMG_C3,
	RookPSTMG_D3,
	RookPSTMG_E3,
	RookPSTMG_F3,
	RookPSTMG_G3,
	RookPSTMG_H3,
	RookPSTMG_A4,
	RookPSTMG_B4,
	RookPSTMG_C4,
	RookPSTMG_D4,
	RookPSTMG_E4,
	RookPSTMG_F4,
	RookPSTMG_G4,
	RookPSTMG_H4,
	RookPSTMG_A5,
	RookPSTMG_B5,
	RookPSTMG_C5,
	RookPSTMG_D5,
	RookPSTMG_E5,
	RookPSTMG_F5,
	RookPSTMG_G5,
	RookPSTMG_H5,
	RookPSTMG_A6,
	RookPSTMG_B6,
	RookPSTMG_C6,
	RookPSTMG_D6,
	RookPSTMG_E6,
	RookPSTMG_F6,
	RookPSTMG_G6,
	RookPSTMG_H6,
	RookPSTMG_A7,
	RookPSTMG_B7,
	RookPSTMG_C7,
	RookPSTMG_D7,
	RookPSTMG_E7,
	RookPSTMG_F7,
	RookPSTMG_G7,
	RookPSTMG_H7,
	RookPSTMG_A8,
	RookPSTMG_B8,
	RookPSTMG_C8,
	RookPSTMG_D8,
	RookPSTMG_E8,
	RookPSTMG_F8,
	RookPSTMG_G8,
	RookPSTMG_H8,
};
int RookPSTEG[64] = {
	RookPSTEG_A1,
	RookPSTEG_B1,
	RookPSTEG_C1,
	RookPSTEG_D1,
	RookPSTEG_E1,
	RookPSTEG_F1,
	RookPSTEG_G1,
	RookPSTEG_H1,
	RookPSTEG_A2,
	RookPSTEG_B2,
	RookPSTEG_C2,
	RookPSTEG_D2,
	RookPSTEG_E2,
	RookPSTEG_F2,
	RookPSTEG_G2,
	RookPSTEG_H2,
	RookPSTEG_A3,
	RookPSTEG_B3,
	RookPSTEG_C3,
	RookPSTEG_D3,
	RookPSTEG_E3,
	RookPSTEG_F3,
	RookPSTEG_G3,
	RookPSTEG_H3,
	RookPSTEG_A4,
	RookPSTEG_B4,
	RookPSTEG_C4,
	RookPSTEG_D4,
	RookPSTEG_E4,
	RookPSTEG_F4,
	RookPSTEG_G4,
	RookPSTEG_H4,
	RookPSTEG_A5,
	RookPSTEG_B5,
	RookPSTEG_C5,
	RookPSTEG_D5,
	RookPSTEG_E5,
	RookPSTEG_F5,
	RookPSTEG_G5,
	RookPSTEG_H5,
	RookPSTEG_A6,
	RookPSTEG_B6,
	RookPSTEG_C6,
	RookPSTEG_D6,
	RookPSTEG_E6,
	RookPSTEG_F6,
	RookPSTEG_G6,
	RookPSTEG_H6,
	RookPSTEG_A7,
	RookPSTEG_B7,
	RookPSTEG_C7,
	RookPSTEG_D7,
	RookPSTEG_E7,
	RookPSTEG_F7,
	RookPSTEG_G7,
	RookPSTEG_H7,
	RookPSTEG_A8,
	RookPSTEG_B8,
	RookPSTEG_C8,
	RookPSTEG_D8,
	RookPSTEG_E8,
	RookPSTEG_F8,
	RookPSTEG_G8,
	RookPSTEG_H8,
};
int QueenPSTMG[64] = {
	QueenPSTMG_A1,
	QueenPSTMG_B1,
	QueenPSTMG_C1,
	QueenPSTMG_D1,
	QueenPSTMG_E1,
	QueenPSTMG_F1,
	QueenPSTMG_G1,
	QueenPSTMG_H1,
	QueenPSTMG_A2,
	QueenPSTMG_B2,
	QueenPSTMG_C2,
	QueenPSTMG_D2,
	QueenPSTMG_E2,
	QueenPSTMG_F2,
	QueenPSTMG_G2,
	QueenPSTMG_H2,
	QueenPSTMG_A3,
	QueenPSTMG_B3,
	QueenPSTMG_C3,
	QueenPSTMG_D3,
	QueenPSTMG_E3,
	QueenPSTMG_F3,
	QueenPSTMG_G3,
	QueenPSTMG_H3,
	QueenPSTMG_A4,
	QueenPSTMG_B4,
	QueenPSTMG_C4,
	QueenPSTMG_D4,
	QueenPSTMG_E4,
	QueenPSTMG_F4,
	QueenPSTMG_G4,
	QueenPSTMG_H4,
	QueenPSTMG_A5,
	QueenPSTMG_B5,
	QueenPSTMG_C5,
	QueenPSTMG_D5,
	QueenPSTMG_E5,
	QueenPSTMG_F5,
	QueenPSTMG_G5,
	QueenPSTMG_H5,
	QueenPSTMG_A6,
	QueenPSTMG_B6,
	QueenPSTMG_C6,
	QueenPSTMG_D6,
	QueenPSTMG_E6,
	QueenPSTMG_F6,
	QueenPSTMG_G6,
	QueenPSTMG_H6,
	QueenPSTMG_A7,
	QueenPSTMG_B7,
	QueenPSTMG_C7,
	QueenPSTMG_D7,
	QueenPSTMG_E7,
	QueenPSTMG_F7,
	QueenPSTMG_G7,
	QueenPSTMG_H7,
	QueenPSTMG_A8,
	QueenPSTMG_B8,
	QueenPSTMG_C8,
	QueenPSTMG_D8,
	QueenPSTMG_E8,
	QueenPSTMG_F8,
	QueenPSTMG_G8,
	QueenPSTMG_H8,
};
int QueenPSTEG[64] = {
	QueenPSTEG_A1,
	QueenPSTEG_B1,
	QueenPSTEG_C1,
	QueenPSTEG_D1,
	QueenPSTEG_E1,
	QueenPSTEG_F1,
	QueenPSTEG_G1,
	QueenPSTEG_H1,
	QueenPSTEG_A2,
	QueenPSTEG_B2,
	QueenPSTEG_C2,
	QueenPSTEG_D2,
	QueenPSTEG_E2,
	QueenPSTEG_F2,
	QueenPSTEG_G2,
	QueenPSTEG_H2,
	QueenPSTEG_A3,
	QueenPSTEG_B3,
	QueenPSTEG_C3,
	QueenPSTEG_D3,
	QueenPSTEG_E3,
	QueenPSTEG_F3,
	QueenPSTEG_G3,
	QueenPSTEG_H3,
	QueenPSTEG_A4,
	QueenPSTEG_B4,
	QueenPSTEG_C4,
	QueenPSTEG_D4,
	QueenPSTEG_E4,
	QueenPSTEG_F4,
	QueenPSTEG_G4,
	QueenPSTEG_H4,
	QueenPSTEG_A5,
	QueenPSTEG_B5,
	QueenPSTEG_C5,
	QueenPSTEG_D5,
	QueenPSTEG_E5,
	QueenPSTEG_F5,
	QueenPSTEG_G5,
	QueenPSTEG_H5,
	QueenPSTEG_A6,
	QueenPSTEG_B6,
	QueenPSTEG_C6,
	QueenPSTEG_D6,
	QueenPSTEG_E6,
	QueenPSTEG_F6,
	QueenPSTEG_G6,
	QueenPSTEG_H6,
	QueenPSTEG_A7,
	QueenPSTEG_B7,
	QueenPSTEG_C7,
	QueenPSTEG_D7,
	QueenPSTEG_E7,
	QueenPSTEG_F7,
	QueenPSTEG_G7,
	QueenPSTEG_H7,
	QueenPSTEG_A8,
	QueenPSTEG_B8,
	QueenPSTEG_C8,
	QueenPSTEG_D8,
	QueenPSTEG_E8,
	QueenPSTEG_F8,
	QueenPSTEG_G8,
	QueenPSTEG_H8,
};
int KingPSTMG[64] = {
	KingPSTMG_A1,
	KingPSTMG_B1,
	KingPSTMG_C1,
	KingPSTMG_D1,
	KingPSTMG_E1,
	KingPSTMG_F1,
	KingPSTMG_G1,
	KingPSTMG_H1,
	KingPSTMG_A2,
	KingPSTMG_B2,
	KingPSTMG_C2,
	KingPSTMG_D2,
	KingPSTMG_E2,
	KingPSTMG_F2,
	KingPSTMG_G2,
	KingPSTMG_H2,
	KingPSTMG_A3,
	KingPSTMG_B3,
	KingPSTMG_C3,
	KingPSTMG_D3,
	KingPSTMG_E3,
	KingPSTMG_F3,
	KingPSTMG_G3,
	KingPSTMG_H3,
	KingPSTMG_A4,
	KingPSTMG_B4,
	KingPSTMG_C4,
	KingPSTMG_D4,
	KingPSTMG_E4,
	KingPSTMG_F4,
	KingPSTMG_G4,
	KingPSTMG_H4,
	KingPSTMG_A5,
	KingPSTMG_B5,
	KingPSTMG_C5,
	KingPSTMG_D5,
	KingPSTMG_E5,
	KingPSTMG_F5,
	KingPSTMG_G5,
	KingPSTMG_H5,
	KingPSTMG_A6,
	KingPSTMG_B6,
	KingPSTMG_C6,
	KingPSTMG_D6,
	KingPSTMG_E6,
	KingPSTMG_F6,
	KingPSTMG_G6,
	KingPSTMG_H6,
	KingPSTMG_A7,
	KingPSTMG_B7,
	KingPSTMG_C7,
	KingPSTMG_D7,
	KingPSTMG_E7,
	KingPSTMG_F7,
	KingPSTMG_G7,
	KingPSTMG_H7,
	KingPSTMG_A8,
	KingPSTMG_B8,
	KingPSTMG_C8,
	KingPSTMG_D8,
	KingPSTMG_E8,
	KingPSTMG_F8,
	KingPSTMG_G8,
	KingPSTMG_H8,
};
int KingPSTEG[64] = {
	KingPSTEG_A1,
	KingPSTEG_B1,
	KingPSTEG_C1,
	KingPSTEG_D1,
	KingPSTEG_E1,
	KingPSTEG_F1,
	KingPSTEG_G1,
	KingPSTEG_H1,
	KingPSTEG_A2,
	KingPSTEG_B2,
	KingPSTEG_C2,
	KingPSTEG_D2,
	KingPSTEG_E2,
	KingPSTEG_F2,
	KingPSTEG_G2,
	KingPSTEG_H2,
	KingPSTEG_A3,
	KingPSTEG_B3,
	KingPSTEG_C3,
	KingPSTEG_D3,
	KingPSTEG_E3,
	KingPSTEG_F3,
	KingPSTEG_G3,
	KingPSTEG_H3,
	KingPSTEG_A4,
	KingPSTEG_B4,
	KingPSTEG_C4,
	KingPSTEG_D4,
	KingPSTEG_E4,
	KingPSTEG_F4,
	KingPSTEG_G4,
	KingPSTEG_H4,
	KingPSTEG_A5,
	KingPSTEG_B5,
	KingPSTEG_C5,
	KingPSTEG_D5,
	KingPSTEG_E5,
	KingPSTEG_F5,
	KingPSTEG_G5,
	KingPSTEG_H5,
	KingPSTEG_A6,
	KingPSTEG_B6,
	KingPSTEG_C6,
	KingPSTEG_D6,
	KingPSTEG_E6,
	KingPSTEG_F6,
	KingPSTEG_G6,
	KingPSTEG_H6,
	KingPSTEG_A7,
	KingPSTEG_B7,
	KingPSTEG_C7,
	KingPSTEG_D7,
	KingPSTEG_E7,
	KingPSTEG_F7,
	KingPSTEG_G7,
	KingPSTEG_H7,
	KingPSTEG_A8,
	KingPSTEG_B8,
	KingPSTEG_C8,
	KingPSTEG_D8,
	KingPSTEG_E8,
	KingPSTEG_F8,
	KingPSTEG_G8,
	KingPSTEG_H8,
};

int *const idx[2][8] = {
	{ PawnPSTMG, KnightPSTMG, BishopPSTMG, RookPSTMG, QueenPSTMG, KingPSTMG},
	{ PawnPSTEG, KnightPSTEG, BishopPSTEG, RookPSTEG, QueenPSTEG, KingPSTEG}
};

int psq(const libchess::Square sq, const libchess::Color c, const libchess::PieceType t, const int phase)
{
	const int pos = sq;
	const int index = c == libchess::constants::WHITE ? pos : (pos ^ 56);

	return (idx[0][t][index] * (255 - phase) + idx[1][t][index] * phase) / 256;
}
